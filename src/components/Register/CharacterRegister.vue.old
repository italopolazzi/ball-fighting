<template>
  <div class="character-register">
    <v-item-group>
      <v-container fluid>
        <v-row no-gutters justify="start">
          <v-col v-for="(a_c, character_key) in available_characters" :key="character_key">
            <v-item :value="false" v-slot:default="{toggle}">
              <v-card
                @click="toggle(); validateCharacter()"
                :color="a_c.name.toLowerCase()"
                height="58"
                width="58"
              >
                <v-card-text>
                  <v-icon v-if="character.name === a_c.name">mdi-check</v-icon>
                </v-card-text>
              </v-card>
            </v-item>
          </v-col>
        </v-row>
      </v-container>
    </v-item-group>
    {{erros}}
  </div>
</template>

<script>
import { mapGetters, mapActions } from "vuex";

import ItemGroupSelector from "@/components/Register/ItemGroupSelector";

export default {
  name: "character-register",
  components: { ItemGroupSelector },
  props: {
    character: {
      type: Object,
      required: true
    }
  },
  computed: {
    ...mapGetters("register/dual", {
      available_characters: "getAvailableCharacters",
      characters: "getCharacters"
    })
  },
  data() {
    return {
      valid: false
    };
  },
  methods: {
    validateCharacter() {
      const characterDifferent = (character, characters) => {
        return !characters.includes(character);
      };
      const { characters } = this;
      const different = characterDifferent(character, characters);
      return different || "Another player is already using this nickname.";
    }
  },
  watch: {
    valid(val, old_val) {
      if (val !== old_val) {
        this.$emit("characterRegisterValid", val);
      }
    }
  }
};
</script>